#!/bin/bash

# Script to create environment variables file for the frontend

# Function to prompt for a value with a default
prompt_with_default() {
  local prompt_text=$1
  local default_value=$2
  local var_name=$3
  
  read -p "${prompt_text} [${default_value}]: " input
  # Use default if no input provided
  local value=${input:-$default_value}
  eval "$var_name='$value'"
}

# Navigate to the frontend directory
cd frontend

# Ensure the public directory exists
mkdir -p public

# Prompt for configuration values
echo "Please enter the frontend configuration values:"
prompt_with_default "API Base URL" "http://localhost:3000/api" API_BASE_URL
prompt_with_default "API KS Endpoint" "http://localhost:3000/api/ks" API_KS_ENDPOINT
prompt_with_default "Kaltura Partner ID" "" KALTURA_PARTNER_ID
prompt_with_default "Kaltura UI Config ID" "" KALTURA_UICONF_ID
prompt_with_default "Default Entry ID" "" DEFAULT_ENTRY_ID
prompt_with_default "Privacy Context" "" PRIVACY_CONTEXT
prompt_with_default "App ID" "" APP_ID
prompt_with_default "Virtual Event ID" "" VIRTUAL_EVENT_ID

# Create env.js file with provided values
cat > public/env.js << EOL
// This file is auto-generated by create-frontend-env.sh
// Do not edit directly

window.ENV = {
  API_BASE_URL: '${API_BASE_URL}',
  API_KS_ENDPOINT: '${API_KS_ENDPOINT}',
  KALTURA_PARTNER_ID: '${KALTURA_PARTNER_ID}',
  KALTURA_UICONF_ID: '${KALTURA_UICONF_ID}',
  DEFAULT_ENTRY_ID: '${DEFAULT_ENTRY_ID}',
  PRIVACY_CONTEXT: '${PRIVACY_CONTEXT}',
  APP_ID: '${APP_ID}',
  VIRTUAL_EVENT_ID: '${VIRTUAL_EVENT_ID}'
};
EOL

echo "Created env.js file in frontend/public directory with your configuration values"

# Ensure the public directory exists
mkdir -p public

echo "Frontend environment configuration complete"